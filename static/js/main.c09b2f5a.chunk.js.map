{"version":3,"sources":["bank/Form.js","App.js","reportWebVitals.js","index.js"],"names":["FormContainer","props","setBusinessStructure","event","value","target","state_name","name","setState","businessStructureOther","console","log","state","handleInputChange","handleSubmit","currentTarget","checkValidity","preventDefault","stopPropagation","createAndDownloadPdf","validated","axios","post","then","res","get","data","responseType","pdfBlob","Blob","type","saveAs","businessStructure","full_name","existing_customer","customer_acc_number","acn_abn","describe_business","trading_name","date_commenced","no_employee","reg_address","yearsOfManag","principal_place","statutory_obligation","mail_address","accountant_name","primary_contact","phone","acc_phone_number","email","financial_advice_provider","bank_name","Container","className","Form","noValidate","this","onSubmit","Row","Group","Check","label","checked","onChange","controlId","as","Col","Control","required","md","Label","placeholder","aria-label","rows","row","defaultValue","Button","variant","Component","App","handleChange","React","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c09b2f5a.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport Button from 'react-bootstrap/Button';\nimport { Container, Col } from 'react-bootstrap';\nimport Form from 'react-bootstrap/Form';\nimport axios from 'axios';\nimport { saveAs } from 'file-saver';\nimport '../bank/Form.css'\n//import logo from '../../server/documents/logo/melbourne.png';\n//import logo from '../logo.svg'\n//import '../../server/documents/logo'\nclass FormContainer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            businessStructure: '',\n            businessStructureOther: '',\n            full_name: '',\n            existing_customer: '',\n            customer_acc_number: '',\n            acn_abn: '',\n            describe_business: '',\n            trading_name: '',\n            date_commenced: '',\n            no_employee: '',\n            reg_address: '',\n            yearsOfManag: '',\n            principal_place: '',\n            statutory_obligation: '',\n            mail_address: '',\n            accountant_name: '',\n            primary_contact: '',\n            phone: '',\n            acc_phone_number: '',\n            email: '',\n            financial_advice_provider: '',\n            bank_name: 'melbourne',\n            validated: false\n        }\n    }\n\n    setBusinessStructure = (event) => {\n        const target = event.target;\n        let value = target.value;\n        let state_name = event.target.name;\n        this.setState({ [state_name]: value })\n\n        if (value !== '6') {\n            this.setState({ businessStructureOther: '' });\n        }\n        // if(target.checked){\n\n        //     // this.state.businessStructure[value] = value;   \n        //     // this.setState({state_name : value})\n        // }else{\n        //     // this.state.businessStructure.splice(value, 1);\n        // }\n        console.log(this.state);\n    }\n    handleInputChange = (event) => {\n        const target = event.target;\n        let state_name = event.target.name;\n        let value = target.value;\n        this.setState({ [state_name]: value })\n        console.log(this.state);\n    }\n    handleSubmit = (event) => {\n        const form = event.currentTarget;\n        if (form.checkValidity() === false) {\n            event.preventDefault();\n            event.stopPropagation();\n        } else {\n            this.createAndDownloadPdf();\n            event.preventDefault();\n        }\n        this.setState({ validated: true })\n        console.log(this.state);\n    };\n\n    createAndDownloadPdf = () => {\n        axios.post('/create-pdf', this.state)\n            .then((res) => {\n                axios.get('/fetch-pdf?name=' + res.data.name, { responseType: 'blob' })\n                    .then((res) => {\n                        const pdfBlob = new Blob([res.data], { type: 'application/pdf' });\n                        saveAs(pdfBlob, 'Document.pdf')\n                    })\n            })\n    }\n    render() {\n        return (\n            <Container>\n                <header>\n\n                    {/* <img src={logo} alt=\"logo\" /> */}\n\n                </header>\n                <div className=\"row title\">\n                    <span>SECTION1 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ABOUT YOU AND YOUR BUSINESS</span>\n                </div>\n                <div>\n                    <div className='about-business'>\n                        Business Struture\n                        </div>\n                </div>\n\n                <Form noValidate validated={this.state.validated} onSubmit={this.handleSubmit}>\n                    <Form.Row>\n                        <Form.Group className='flex-wrap-business-prop'>\n                            <Form.Check label=\"Proprietary Company\" value=\"1\" checked={this.state.businessStructure === \"1\" ? true : false} name=\"businessStructure\" onChange={this.setBusinessStructure} />\n                            <Form.Check label=\"Trust\" value=\"2\" checked={this.state.businessStructure === \"2\" ? true : false} name=\"businessStructure\" onChange={this.setBusinessStructure} />\n                            <Form.Check label=\"Association\" value=\"3\" checked={this.state.businessStructure === \"3\" ? true : false} name=\"businessStructure\" onChange={this.setBusinessStructure} />\n                            <Form.Check label=\"Solo Trader / Individual\" value=\"4\" checked={this.state.businessStructure === \"4\" ? true : false} name=\"businessStructure\" onChange={this.setBusinessStructure} />\n                            <Form.Check label=\"Partnership/Joint\" value=\"5\" checked={this.state.businessStructure === \"5\" ? true : false} name=\"businessStructure\" onChange={this.setBusinessStructure} />\n                            <Form.Check label=\"Other\" value=\"6\" checked={this.state.businessStructure === \"6\" ? true : false} name=\"businessStructure\" onChange={this.setBusinessStructure} />\n                        </Form.Group>\n\n                        {this.state.businessStructure === \"6\" && <Form.Group controlId=\"form.formKeywords\" as={Col} >\n                            <Form.Control type=\"text\" required name=\"businessStructureOther\" onChange={this.handleInputChange} />\n                        </Form.Group>}\n                    </Form.Row>\n                    <Form.Row>\n                        <Form.Group controlId=\"form.formKeywords\" as={Col} md=\"5\"  >\n                            <Form.Label>Full legal name of Applicant(s) (as registered by ASIC)</Form.Label>\n                            <Form.Control type=\"text\" required placeholder=\"Enter legal name\" name=\"full_name\" onChange={this.handleInputChange} />\n                        </Form.Group>\n\n                        <Form.Group as={Col} md=\"2\" >\n                            <span>Existing Customer</span>\n                            <Form.Check\n                                value=\"yes\"\n                                type=\"radio\"\n                                aria-label=\"radio 2\"\n                                label=\"Yes\"\n                                checked={this.state.existing_customer === 'yes' ? true : false}\n                                name=\"existing_customer\"\n                                onChange={this.handleInputChange}\n                            />\n                            <Form.Check\n                                value=\"no\"\n                                type=\"radio\"\n                                aria-label=\"radio 2\"\n                                label=\"No\"\n                                checked={this.state.existing_customer === \"no\" ? true : false}\n                                name=\"existing_customer\"\n                                onChange={this.handleInputChange}\n                            />\n                        </Form.Group>\n\n                        <Form.Group controlId=\"form.formKeywords\" as={Col} md=\"5\"  >\n                            <Form.Label>Customer number/BSB & Account number/card number</Form.Label>\n                            <Form.Control type=\"text\" required placeholder=\"Enter Keywords\" name=\"customer_acc_number\" onChange={this.handleInputChange} />\n                        </Form.Group>\n                    </Form.Row>\n                    <Form.Row>\n                        <Form.Group controlId=\"form.formHeadline\" as={Col} md=\"5\" >\n                            <Form.Label>ACN/ABN</Form.Label>\n                            <Form.Control required type=\"text\" placeholder=\"Headline\" name=\"acn_abn\" onChange={this.handleInputChange} />\n                        </Form.Group>\n                        <Form.Group controlId=\"form.formWord1\" as={Col} md=\"7\" >\n                            <Form.Label>Briefly describe your business/industry</Form.Label>\n                            <Form.Control required as=\"textarea\" rows={3} placeholder=\"\" name=\"describe_business\" onChange={this.handleInputChange} />\n                        </Form.Group>\n                    </Form.Row>\n                    <Form.Row>\n                        <Form.Group controlId=\"form.formWord1\" as={Col} md=\"5\" >\n                            <Form.Label>Trading name</Form.Label>\n                            <Form.Control required type=\"text\" placeholder=\"\" name=\"trading_name\" onChange={this.handleInputChange} />\n                        </Form.Group>\n                        <Form.Group controlId=\"form.formWord1\" as={Col} md=\"5\" >\n                            <Form.Label>Date commenced trading(under current ownership)</Form.Label>\n                            <Form.Control required type=\"text\" placeholder=\"\" name=\"date_commenced\" onChange={this.handleInputChange} />\n                        </Form.Group>\n                        <Form.Group controlId=\"form.formWord1\" as={Col} md=\"2\" >\n                            <Form.Label>No. of employees</Form.Label>\n                            <Form.Control required type=\"text\" placeholder=\"\" name=\"no_employee\" onChange={this.handleInputChange} />\n                        </Form.Group>\n                    </Form.Row>\n                    <Form.Row>\n                        <Form.Group controlId=\"form.formWord2\" as={Col} md=\"5\" >\n                            <Form.Label>Registered address (not a PO Box)</Form.Label>\n                            <Form.Control required as=\"textarea\" row={3} placeholder=\"\" name=\"reg_address\" onChange={this.handleInputChange} />\n                        </Form.Group>\n                        <Form.Group controlId=\"form.formWord2\" as={Col} md=\"7\" >\n                            <Form.Label>Years of management experience in this industry for direct/manager</Form.Label>\n                            <Form.Control required type=\"text\" placeholder=\"\" md=\"5\" className='yearex' name=\"yearsOfManag\" onChange={this.handleInputChange} />\n                        </Form.Group>\n                    </Form.Row>\n\n                    <Form.Row>\n                        <Form.Group controlId=\"form.formWord2\" as={Col} md=\"5\" >\n                            <Form.Label>Principal place of business (if different from registered address)</Form.Label>\n                            <Form.Control required as=\"textarea\" row={3} placeholder=\"\" name=\"principal_place\" onChange={this.handleInputChange} />\n                        </Form.Group>\n                        <Form.Group controlId=\"form.formWord2\" as={Col} md=\"7\" >\n                            <Form.Label>Have all statutory obligation of the business, including employee entitlements, been met?</Form.Label>\n                            <Form.Check\n                                value=\"yes\"\n                                type=\"radio\"\n                                aria-label=\"radio 2\"\n                                label=\"Yes\"\n                                checked={this.state.statutory_obligation === \"yes\" ? true : false}\n                                name=\"statutory_obligation\"\n                                onChange={this.handleInputChange}\n                            />\n                            <Form.Check\n                                value=\"no\"\n                                type=\"radio\"\n                                aria-label=\"radio 2\"\n                                label=\"No\"\n                                checked={this.state.statutory_obligation === \"no\" ? true : false}\n                                name=\"statutory_obligation\"\n                                onChange={this.handleInputChange}\n                            />\n                        </Form.Group>\n                    </Form.Row>\n                    <Form.Row>\n                        <Form.Group controlId=\"form.formWord2\" as={Col} md=\"5\" >\n                            <Form.Label>Mailing address (if different from registered address)</Form.Label>\n                            <Form.Control required as=\"textarea\" row={3} placeholder=\"\" name=\"mail_address\" onChange={this.handleInputChange} />\n                        </Form.Group>\n                        <Form.Group controlId=\"form.formWord2\" as={Col} md=\"7\" >\n                            <Form.Label>Accountant Name</Form.Label>\n                            <Form.Control required type=\"text\" placeholder=\"\" md=\"5\" name=\"accountant_name\" onChange={this.handleInputChange} />\n                        </Form.Group>\n                    </Form.Row>\n                    <Form.Row>\n                        <Form.Group controlId=\"form.formWord2\" as={Col} md=\"3\" >\n                            <Form.Label>Primary contact person</Form.Label>\n                            <Form.Control required type=\"text\" placeholder=\"\" name=\"primary_contact\" onChange={this.handleInputChange} />\n                        </Form.Group>\n                        <Form.Group controlId=\"form.formWord2\" as={Col} md=\"2\" >\n                            <Form.Label>Phone</Form.Label>\n                            <Form.Control required type=\"text\" placeholder=\"\" name=\"phone\" onChange={this.handleInputChange} />\n                        </Form.Group>\n                        <Form.Group controlId=\"form.formWord2\" as={Col} md=\"7\" >\n                            <Form.Label>Accountant's phone number</Form.Label>\n                            <Form.Control required type=\"text\" placeholder=\"\" md=\"5\" name=\"acc_phone_number\" onChange={this.handleInputChange} />\n                        </Form.Group>\n                    </Form.Row>\n                    <Form.Row>\n                        <Form.Group controlId=\"form.formWord2\" as={Col} md=\"5\" >\n                            <Form.Label>Email</Form.Label>\n                            <Form.Control required type=\"text\" placeholder=\"\" name=\"email\" onChange={this.handleInputChange} />\n                        </Form.Group>\n\n                        <Form.Group controlId=\"form.formWord2\" as={Col} md=\"7\" >\n                            <Form.Label>Who is your main provider of financial advice?</Form.Label>\n                            <Form.Control required type=\"text\" placeholder=\"\" md=\"5\" name=\"financial_advice_provider\" onChange={this.handleInputChange} />\n                        </Form.Group>\n                    </Form.Row>\n                    <Form.Row>\n                        <Form.Group controlId=\"form.ControlSelect1\" as={Col} md=\"6\" >\n                            <Form.Label>Select Bank</Form.Label>\n                            <Form.Control as=\"select\" defaultValue={'Category 1'} required name=\"bank_name\" onChange={this.handleInputChange}>\n                                <option value='melbourne'>Bank Of Melbourne</option>\n                                <option value='suncorp'>Suncorp</option>\n                                <option value='boq'>Bank of Queensland</option>\n                                <option value='macquarie'>Macquarie Bank</option>\n\n                            </Form.Control>\n                        </Form.Group>\n                    </Form.Row>\n                    <Button variant=\"primary\" type=\"submit\">\n                        Generate PDF\n                </Button>\n                </Form>\n            </Container>\n        );\n    }\n}\n\nexport default FormContainer;","import React from \"react\";\n\nimport axios from 'axios';\nimport { saveAs } from 'file-saver';\nimport FormContainer from './bank/Form'\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nclass App extends React.Component {\n\n  handleChange = ({ target: { value, name } }) => this.setState({ [name]: value });\n\n  createAndDownloadPdf = () => {\n    axios.post('http://localhost:5000/create-pdf', this.state)\n    .then((res) => {\n      axios.get('http://localhost:5000/fetch-pdf?name='+res.data.name, { responseType: 'blob' })\n      .then((res) => { \n        const pdfBlob = new Blob([res.data], { type: 'application/pdf' });\n        saveAs(pdfBlob, 'generatedDocument.pdf')\n  \n      })\n    })\n }\n  render() {\n    return (\n      \n        <div className=\"App\">\n          <FormContainer/>\n          {/* <input type=\"text\" placeholder=\"Name\" name=\"name\" onChange ={this.handleChange} />\n          <input type=\"number\" placeholder=\"Receipt ID\" name=\"receiptId\" onChange={this.handleChange} />\n          <input type=\"number\" placeholder=\"Price 1\" name=\"price1\" onChange={this.handleChange} />\n          <input type=\"number\" placeholder=\"Price 2\" name=\"price2\" onChange={this.handleChange} />\n          <button onClick={this.createAndDownloadPdf}>Download PDF</button> */}\n        </div>\n      \n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}